#==============Insert in the front of a list ==================
num = 8
l = [4,6,7,9]
l.insert(0,num)
print(l)

#=========Get max consecutive numbers===================
import itertools
l = [4, 4, 4,4, 5, 6,7,8]
print(max(len(list(x)) for y,x in itertools.groupby(l)))

#=========Swapping two variables================

a = 10
b = 20

a,b = b,a
print (a,b)

#===============Dictionary ======================
l1 = [3,1,5,2,4,8]
d = {}

k = list(d.keys()) 
v = list(d.values())

# get key given value
print(k[v.index(4)]) 

#Or like this- get key given value
print(list(d.keys())[list(d.values()).index(4)])

#==============Determine Odd or Even number using bitwise operator & ===============
#since modulous operator comes very costly

num = 348

if num & 1 ==0:
    print ('Even')
elif num & 1 ==1:
    print('Odd')

#==========Dataframe getting min/max column value and min/max row index of column value ============
df['column'].max()
df['column'].min()

df['column'].idxmax()
df['column'].idxmin()

#======================Data Frame error ========================================
if get error like this - Error tokenizing data. C error: Expected 10 fields in line 3, saw 14
Try this - 
df = pd.read_csv(filename,error_bad_lines=False)

According to pandas.pydata.org -
error_bad_lines : bool, default True
Lines with too many fields (e.g. a csv line with too many commas) will by default cause an exception to be raised, and no DataFrame will be returned. If False, then these “bad lines” will dropped from the DataFrame that is returned.

#============== Few Python list properties =================
a = [1,2,3]
b = [4,5,6]

a.extend(b) = [1,2,3,4,5,6]
a + b = [1,2,3,4,5,6]
a[len(a):] = b => [1,2,3,4,5,6
a.append(b) = [1,2,3,[4,5,6]]

#============ Zip to join two tuples together ===============
a = ('x','y','z')
b = (1,2,3)
c = (zip(a,b))

print(tuple(c)) => (('x', 1), ('y', 2), ('z', 3))
print(zip(a,b) =>



